{"version":3,"sources":["components/Alerts.js","redux/actions/types.js","redux/actions/auth.js","views/Login.js","views/NotFound.js","redux/actions/patient.js","components/Navbar.js","components/AddPatient.js","components/AddMedicine.js","components/AddNewMedicine.js","redux/actions/masterMedicine.js","components/AddDiagnostics.js","components/ViewAllPatients.js","components/UpdatePatient.js","components/BillPatient.js","components/AddNewTest.js","redux/actions/masterDiagnostic.js","views/Dashboard.js","views/SignUp.js","components/PrivateRoute.js","Routes.js","redux/reducers/auth.js","redux/reducers/errors.js","redux/reducers/messages.js","redux/reducers/patient.js","redux/reducers/allPatients.js","redux/reducers/masterDiagnostic.js","redux/reducers/masterMedicine.js","redux/reducers/index.js","redux/store.js","components/AlertTemplate.js","theme/palette.js","theme/index.js","App.js","serviceWorker.js","index.js"],"names":["Alerts","prevProps","this","props","error","alert","messages","msg","status","name","join","username","password","role","quantity","medicines","medicine","diagnostic","diagnostics","ssn","admited_on","address","state","city","age","success","Component","connect","errors","withAlert","GET_ERRORS","tokenConfig","getState","token","auth","config","headers","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","padding","avatar","margin","backgroundColor","palette","primary","main","form","width","submit","login","dispatch","body","JSON","stringify","axios","post","process","then","res","type","payload","data","catch","err","response","classes","useState","setState","onChange","e","target","value","isAuthenticated","to","Container","component","maxWidth","CssBaseline","Paper","elevation","className","variant","Avatar","Typography","noValidate","onSubmit","preventDefault","TextField","required","fullWidth","id","label","autoFocus","Button","color","disableElevation","root","content","paddingTop","textAlign","image","icon","fontSize","NotFound","Grid","container","justify","item","lg","xs","updatePatient","b","d","put","boxShadow","flexGrow","spaceRight","marginRight","title","logout","AppBar","Toolbar","Link","onClick","utc","require","dayjs","extend","formControl","minWidth","selectEmpty","addPatient","open","setOpen","setDisplay","handleClose","type_of_bed","useEffect","format","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","sm","size","FormControl","InputLabel","Select","labelId","MenuItem","textField","InputLabelProps","shrink","multiline","rowsMax","val","selectState","State","selectRegion","DialogActions","mtop","master_med","masterMedicine","master","patient_id","patient","addMedicinePatient","setID","setQuantity","disabled","DialogContentText","Autocomplete","options","event","newValue","getOptionLabel","option","getOptionSelected","renderInput","params","addMedicineMaster","rate","diagnostic_master","masterDiagnostic","addDiagnosticPatient","viewAllButton","maxHeight","ViewAllPatients","IconButton","newPaper","React","m_bill","reduce","acc","Number","d_bill","date","utc_format","Date","toDateString","cur_date","difference","d1","d2","date1","ans","diff","roomPrice","days","aria-describedby","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","scope","map","key","discharged","window","print","addDiagnosticMaster","tandb","marginBottom","row","height","spacer","gpaper","tablePaper","search","borderRadius","flexBasis","input","lineHeight","letterSpacing","table","ncontainer","bspan","mapDispatchToProps","getPatient","isNaN","get","getMedicineMaster","removeMedicinePatient","delete","removeDiagnosticPatient","getDiagnosticMaster","getAllPatients","deletePatient","removeMedicineMaster","removeDiagnosticMaster","user","allPatients","result","checkedB","setSearch","submitted","setSubmitted","roleDashboard","Fragment","InputProps","endAdornment","InputAdornment","position","FormControlLabel","control","Switch","checked","style","background","fresh","marginLeft","border","md","Input","helperText","AddNewTest","Box","slice","secondary","register","autoComplete","href","rest","render","Routes","exact","path","LoginView","SignUpView","DashboardView","NotFoundView","initialState","localStorage","getItem","isLoading","created_at","appReducer","combineReducers","action","removeItem","setItem","filter","rootReducer","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","buttonStyle","cursor","AlertTemplate","message","close","textTransform","justifyContent","fontFamily","boxSizing","flex","paddingLeft","white","black","contrastText","dark","colors","lightBlue","light","blue","green","info","warning","orange","red","text","blueGrey","link","default","divider","grey","createMuiTheme","alertOptions","timeout","App","ThemeProvider","template","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"js/main.1bff5d01.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { withAlert } from 'react-alert';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Alerts extends Component {\r\n\r\n    static propTypes ={\r\n        error: PropTypes.object.isRequired,\r\n        messages: PropTypes.object.isRequired\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        const { error, alert, messages } = this.props;\r\n        if(error !== prevProps.error){\r\n        if(error.msg.error) alert.error(error.msg.error);\r\n        if (error.msg && error.status === 10401) alert.error(error.msg);\r\n        if(error.msg.name) alert.error(\"NAME: \"+error.msg.name.join());\r\n        if(error.msg.username) alert.error(\"USERNAME: \"+error.msg.username.join());\r\n        if(error.msg.password) alert.error(\"PASSWORD: \"+error.msg.password.join());\r\n        if(error.msg.role) alert.error(\"ROLE: \"+error.msg.role.join());\r\n        if(error.msg.quantity) alert.error(\"QUANTITY: \"+error.msg.quantity.join());\r\n        if(error.msg.medicines) alert.error(\"MEDICINE: \"+error.msg.medicines.join());\r\n        if(error.msg.medicine) alert.error(\"MEDICINE: \"+error.msg.medicine.join());\r\n        if(error.msg.diagnostic) alert.error(\"Diagnostic: \"+error.msg.diagnostic.join());\r\n        if(error.msg.diagnostics) alert.error(\"diagnostic: \"+error.msg.diagnostics.join());\r\n        if(error.msg.ssn) alert.error(\"SSN: \"+error.msg.ssn.join());\r\n        if(error.msg.admited_on) alert.error(\"Admited on: \"+error.msg.admited_on.join());\r\n        if(error.msg.address)alert.error(\"Address: \"+error.msg.address.join());\r\n        if(error.msg.state)alert.error(\"State: \"+error.msg.state.join());\r\n        if(error.msg.city)alert.error(\"City: \"+error.msg.city.join());\r\n        if(error.msg.age)alert.error(\"AGE: \"+error.msg.age.join());\r\n        }\r\n\r\n        if(messages !== prevProps.messages){\r\n        alert.success(messages.msg);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    error: state.errors,\r\n    messages: state.messages\r\n});\r\n\r\nexport default connect(mapStateToProps)(withAlert()(Alerts));","export const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_USER = \"LOGOUT_USER\";\r\nexport const REGISTRATION_SUCCESS = \"REGISTRATION_SUCCESS\";\r\nexport const REGISTRATION_FAIL = \"REGISTRATION_FAIL\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_MESSAGES = \"GET_MESSAGES\";\r\nexport const GET_PATIENT = \"GET_PATIENT\";\r\nexport const GET_ALL_PATIENTS = \"GET_ALL_PATIENTS\";\r\nexport const DELETE_PATIENT = \"DELETE_PATIENT\";\r\nexport const ADD_PATIENT = \"ADD_PATIENT\";\r\nexport const ADD_MEDICINE_PATIENT = \"ADD_MEDICINE_PATIENT\";\r\nexport const ADD_DIAGNOSTIC_PATIENT = \"ADD_DIAGNOSTIC_PATIENT\";\r\nexport const REMOVE_MEDICINE_PATIENT = \"REMOVE_MEDICINE_PATIENT\";\r\nexport const REMOVE_DIAGNOSTIC_PATIENT = \"REMOVE_DIAGNOSTIC_PATIENT\";\r\nexport const ADD_MEDICINE_MASTER = \"ADD_MEDICINE_MASTER\";\r\nexport const ADD_DIAGNOSTIC_MASTER = \"ADD_DIAGNOSTIC_MASTER\";\r\nexport const REMOVE_MEDICINE_MASTER = \"REMOVE_MEDICINE_MASTER\";\r\nexport const REMOVE_DIAGNOSTIC_MASTER = \"REMOVE_DIAGNOSTIC_MASTER\";\r\nexport const GET_SEARCH = \"GET_SEARCH\";\r\nexport const GET_DIAGNOSTIC_MASTER = \"GET_DIAGNOSTIC_MASTER\";\r\nexport const GET_MEDICINE_MASTER = \"GET_MEDICINE_MASTER\";\r\nexport const UPDATE_MEDICINE = \"UPDATE_MEDICINE\";\r\nexport const CLEAR_PATIENT = \"CLEAR_PATIENT\";\r\nexport const UPDATE_PATIENT = \"UPDATE_PATIENT\";\r\nexport const UPDATE_PATIENT_MEDICINE_LIST = \"UPDATE_PATIENT_MEDICINE_LIST\";\r\nexport const UPDATE_PATIENT_DIAGNOSTIC_LIST = \"UPDATE_PATIENT_DIAGNOSTIC_LIST\";\r\nexport const CLEAR = \"CLEAR\";","import axios from \"axios\";\r\nimport {\r\n  USER_LOADED,\r\n  USER_LOADING,\r\n  AUTH_ERROR,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT_USER,\r\n  GET_ERRORS,\r\n  REGISTRATION_SUCCESS,\r\n  REGISTRATION_FAIL,\r\n  GET_MESSAGES,\r\n  CLEAR\r\n} from \"./types\";\r\n\r\nexport const loadUser = () => (dispatch, getState) => {\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  const token = getState().auth.token;\r\n\r\n  const config = {\r\n    header: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  if (token) {\r\n    config.header[\"api-token\"] = `${token}`;\r\n  }\r\n  axios\r\n    .get(\r\n      `${process.env.REACT_APP_API_URL}/api/users/me`,\r\n      tokenConfig(getState)\r\n    )\r\n    .then((res) => {\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n      });\r\n    });\r\n};\r\n\r\nexport const login = (username, password) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // Request Body\r\n  const body = JSON.stringify({ username, password });\r\n\r\n  axios\r\n    .post(`${process.env.REACT_APP_API_URL}/api/users/login`, body, config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n      const error = {\r\n        msg: err.response.data,\r\n        status: err.response.status,\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error,\r\n      });\r\n    });\r\n};\r\n\r\nexport const logout = () => (dispatch, getState) => {\r\n  dispatch({\r\n    type: LOGOUT_USER,\r\n  });\r\n  dispatch({\r\n    type: CLEAR\r\n  });\r\n};\r\n\r\nexport const tokenConfig = (getState) => {\r\n  // Get token from state\r\n  const token = getState().auth.token;\r\n\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // If token, add to headers config\r\n  if (token) {\r\n    config.headers[\"api-token\"] = `${token}`;\r\n  }\r\n\r\n  return config;\r\n};\r\n\r\nexport const register = (name, username, password, role) => (dispatch) => {\r\n\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ username, name, password, role });\r\n\r\n  axios\r\n    .post(`${process.env.REACT_APP_API_URL}/api/users/register`, body, config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: REGISTRATION_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      dispatch({\r\n        type: GET_MESSAGES,\r\n        payload: \"REGISTRATION SUCESSFUL\"\r\n      })\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: REGISTRATION_FAIL,\r\n      });\r\n      const error = {\r\n        msg: err.response.data,\r\n        status: err.response.status\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error\r\n      });\r\n    })\r\n\r\n}","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../redux/actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\n//MUI\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({});\r\n  const onChange = (e) =>\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.login(state.username, state.password);\r\n  };\r\n\r\n  if (props.auth.isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Paper elevation={0} className={classes.paper} variant=\"outlined\">\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Typography variant=\"caption\">\r\n            Continue to your Respective Dept\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              onChange={onChange}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              onChange={onChange}\r\n              type=\"password\"\r\n              id=\"password\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              disableElevation\r\n            >\r\n              Sign In\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\n\r\n//MUI\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n  },\r\n  content: {\r\n    paddingTop: 150,\r\n    textAlign: \"center\",\r\n  },\r\n  image: {\r\n    marginTop: 50,\r\n    display: \"inline-block\",\r\n    maxWidth: \"100%\",\r\n    width: 560,\r\n  },\r\n  icon: {\r\n    fontSize: 100,\r\n  },\r\n}));\r\n\r\nfunction NotFound() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container justify=\"center\" spacing={4}>\r\n        <Grid item lg={6} xs={12}>\r\n          <div className={classes.content}>\r\n            <CloseIcon color=\"error\" className={classes.icon} />\r\n            <Typography variant=\"h5\">\r\n              404: The page you are looking for isn’t here\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              You either tried some shady route or you came here by mistake.\r\n              Whichever it is, try using the navigation\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import {\r\n  GET_PATIENT,\r\n  ADD_MEDICINE_PATIENT,\r\n  ADD_DIAGNOSTIC_PATIENT,\r\n  REMOVE_DIAGNOSTIC_PATIENT,\r\n  REMOVE_MEDICINE_PATIENT,\r\n  GET_ALL_PATIENTS,\r\n  DELETE_PATIENT,\r\n  GET_ERRORS,\r\n  GET_MESSAGES,\r\n  UPDATE_MEDICINE,\r\n  CLEAR_PATIENT,\r\n  ADD_PATIENT,\r\n  UPDATE_PATIENT\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\nimport { tokenConfig } from \"./auth\";\r\n\r\nexport const getPatient = (id) => (dispatch, getState) => {\r\n\r\n  if (isNaN(id)) {\r\n    const error = {\r\n      msg: \"Enter a valid ID\",\r\n      status: 10401,\r\n    };\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error\r\n    });\r\n    return;\r\n  }\r\n\r\n  axios\r\n    .get(`${process.env.REACT_APP_API_URL}/api/patients/${id}`, tokenConfig(getState))\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_PATIENT,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      const error = {\r\n        msg: err.response.data,\r\n        status: err.response.status,\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error,\r\n      });\r\n    });\r\n};\r\n\r\nexport const addMedicinePatient = (medicine, patient, quantity) => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n\r\n  if (quantity <= 0) {\r\n    const error = {\r\n      msg: \"Enter a valid quantity\",\r\n      status: 10401,\r\n    };\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error\r\n    });\r\n    return;\r\n  }\r\n\r\n  const body = JSON.stringify({ medicine, patient, quantity });\r\n\r\n  axios\r\n    .post(`${process.env.REACT_APP_API_URL}/api/medicines/`, body, tokenConfig(getState))\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ADD_MEDICINE_PATIENT,\r\n        payload: res.data,\r\n      });\r\n      dispatch({\r\n        type: UPDATE_MEDICINE,\r\n        payload: res.data,\r\n      });\r\n      dispatch({\r\n        type: GET_MESSAGES,\r\n        payload: \"ADDED\"\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      const error = {\r\n        msg: err.response.data,\r\n        status: err.response.status,\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error,\r\n      });\r\n    });\r\n};\r\n\r\nexport const addDiagnosticPatient = (diagnostic, patient) => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const body = JSON.stringify({ diagnostic, patient });\r\n  axios\r\n    .post(\r\n      `${process.env.REACT_APP_API_URL}/api/diagnostics/`,\r\n      body,\r\n      tokenConfig(getState)\r\n    )\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ADD_DIAGNOSTIC_PATIENT,\r\n        payload: res.data,\r\n      });\r\n      dispatch({\r\n        type: GET_MESSAGES,\r\n        payload: \"ADDED\"\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      const error = {\r\n        msg: err.response.data,\r\n        status: err.response.status,\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error,\r\n      });\r\n    });\r\n};\r\n\r\nexport const removeMedicinePatient = (id) => (dispatch, getState) => {\r\n  axios\r\n    .delete(\r\n      `${process.env.REACT_APP_API_URL}/api/medicines/${id}`,\r\n      tokenConfig(getState)\r\n    )\r\n    .then((res) => {\r\n      dispatch({\r\n        type: REMOVE_MEDICINE_PATIENT,\r\n        payload: id,\r\n      });\r\n      dispatch({\r\n        type: GET_MESSAGES,\r\n        payload: \"DELETED\"\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      const error = {\r\n        msg: err.response.data,\r\n        status: err.response.status,\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error,\r\n      });\r\n    });\r\n};\r\n\r\nexport const removeDiagnosticPatient = (id) => (dispatch, getState) => {\r\n  axios\r\n    .delete(\r\n      `${process.env.REACT_APP_API_URL}/api/diagnostics/${id}`,\r\n      tokenConfig(getState)\r\n    )\r\n    .then((res) => {\r\n      dispatch({\r\n        type: REMOVE_DIAGNOSTIC_PATIENT,\r\n        payload: id,\r\n      });\r\n      dispatch({\r\n        type: GET_MESSAGES,\r\n        payload: \"DELETED\"\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      const error = {\r\n        msg: err.response.data,\r\n        status: err.response.status,\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error,\r\n      });\r\n    });\r\n};\r\n\r\nexport const updatePatient = (b, id, d) => (dispatch, getState) => {\r\n  const body = JSON.stringify(b);\r\n  axios\r\n    .put(\r\n      `${process.env.REACT_APP_API_URL}/api/patients/${id}`,\r\n      body,\r\n      tokenConfig(getState)\r\n    )\r\n    .then((res) => {\r\n      dispatch({\r\n        type: UPDATE_PATIENT,\r\n        payload: res.data,\r\n      });\r\n      dispatch({\r\n        type: GET_PATIENT,\r\n        payload: res.data\r\n      });\r\n      dispatch({\r\n        type: GET_MESSAGES,\r\n        payload: d? \"PATIENT DISCHARGED\" : \"UPDATED\"\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      const error = {\r\n        msg: err.response.data,\r\n        status: err.response.status,\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error,\r\n      });\r\n    });\r\n};\r\n\r\nexport const getAllPatients = () => (dispatch, getState) => {\r\n  axios\r\n    .get(\r\n      `${process.env.REACT_APP_API_URL}/api/patients/`,\r\n      tokenConfig(getState)\r\n    )\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_ALL_PATIENTS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      const error = {\r\n        msg: err.response.data,\r\n        status: err.response.status,\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error,\r\n      });\r\n    });\r\n};\r\n\r\nexport const deletePatient = (id) => (dispatch, getState) => {\r\n  axios\r\n    .delete(\r\n      `${process.env.REACT_APP_API_URL}/api/patients/${id}`,\r\n      tokenConfig(getState)\r\n    )\r\n    .then((res) => {\r\n      dispatch({\r\n        type: DELETE_PATIENT,\r\n        payload: id,\r\n      });\r\n      dispatch({\r\n        type: CLEAR_PATIENT,\r\n        payload: id,\r\n      })\r\n      dispatch({\r\n        type: GET_MESSAGES,\r\n        payload: \"DELETED\"\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      const error = {\r\n        msg: err.response.data,\r\n        status: err.response.status,\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error,\r\n      });\r\n    });\r\n};\r\n\r\n\r\nexport const addPatient = (data) => (dispatch, getState) => {\r\n  const body = JSON.stringify(data);\r\n  axios.post(`${process.env.REACT_APP_API_URL}/api/patients/`, body, tokenConfig(getState))\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ADD_PATIENT,\r\n        payload: res.data\r\n      });\r\n      dispatch({\r\n        type: GET_MESSAGES,\r\n        payload: \"ADDED\"\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      const error = {\r\n        msg: err.response.data,\r\n        status: err.response.status,\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error,\r\n      });\r\n    })\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { logout } from \"../redux/actions/auth\";\r\n\r\n//MUI\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { AppBar, Toolbar, Button } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    boxShadow: \"none\",\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1,\r\n  },\r\n  spaceRight: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nconst Navbar = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <AppBar className={classes.root}>\r\n        <Toolbar>\r\n          <Typography\r\n            variant=\"h5\"\r\n            className={classes.title}\r\n            component={Link}\r\n            to={\"/\"}\r\n          >\r\n            ABC\r\n          </Typography>\r\n          <div className={classes.flexGrow} />\r\n          { props.isAuthenticated?\r\n          <>\r\n          <Button\r\n            className={classes.spaceRight}\r\n            color=\"inherit\"\r\n            disableElevation\r\n            onClick = {()=>{props.logout()}}\r\n          >\r\n            sign out\r\n          </Button>\r\n          </>:\r\n          <>\r\n          <Button\r\n            className={classes.spaceRight}\r\n            color=\"inherit\"\r\n            variant=\"outlined\"\r\n            component={Link}\r\n            to={'/signup'}\r\n          >\r\n            sign up\r\n          </Button>\r\n          </>\r\n          }   \r\n        </Toolbar>\r\n      </AppBar>\r\n      ;\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(Navbar);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport {\r\n  StateDropdown,\r\n  RegionDropdown,\r\n} from \"react-india-state-region-selector\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPatient } from \"../redux/actions/patient\";\r\nimport PropTypes from \"prop-types\";\r\nimport dayjs from \"dayjs\";\r\nvar utc = require(\"dayjs/plugin/utc\");\r\ndayjs.extend(utc);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction AddPatient(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [display, setDisplay] = useState();\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const selectState = (val) => {\r\n    setState({ ...state, state: val });\r\n  };\r\n\r\n  const selectRegion = (val) => {\r\n    setState({ ...state, city: val });\r\n  };\r\n\r\n  const [state, setState] = useState({\r\n    ssn: 0,\r\n    name: \"\",\r\n    age: 0,\r\n    admited_on: null,\r\n    type_of_bed: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    return () => {\r\n      setState({\r\n        ssn: 0,\r\n        name: \"\",\r\n        age: 0,\r\n        admited_on: null,\r\n        type_of_bed: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n      });\r\n      setOpen(false);\r\n    }\r\n  }, [])\r\n\r\n  const onChange = (e) => {\r\n    if (e.target.name === \"admited_on\") {\r\n      setDisplay(e.target.value);\r\n      let d = dayjs(display);\r\n      setState({ ...state, [e.target.name]: d.utc().format() });\r\n      return;\r\n    }\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.addPatient(state);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n        disableElevation\r\n      >\r\n        Add Patient\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Patient Registration</DialogTitle>\r\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n          <DialogContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  name=\"ssn\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"ssn\"\r\n                  label=\"SSN ID\"\r\n                  size=\"small\"\r\n                  onChange={onChange}\r\n                  value={state.ssn}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"name\"\r\n                  label=\"Patient Name\"\r\n                  name=\"name\"\r\n                  size=\"small\"\r\n                  onChange={onChange}\r\n                  value={state.name}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <FormControl variant=\"outlined\" size=\"small\" fullWidth>\r\n                  <TextField\r\n                    label=\"Age\"\r\n                    required\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    id=\"age\"\r\n                    name=\"age\"\r\n                    type=\"number\"\r\n                    onChange={onChange}\r\n                    value={state.age}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <FormControl variant=\"outlined\" size=\"small\" fullWidth>\r\n                  <InputLabel id=\"type-of-room-label\">Type Of Room</InputLabel>\r\n                  <Select\r\n                    labelId=\"type-of-room-label\"\r\n                    id=\"type_of_bed\"\r\n                    name=\"type_of_bed\"\r\n                    value={state.type_of_bed}\r\n                    onChange={onChange}\r\n                    label=\"Type Of Room\"\r\n                    required\r\n                  >\r\n                    <MenuItem value={\"Single\"}>Single</MenuItem>\r\n                    <MenuItem value={\"Shared\"}>Shared</MenuItem>\r\n                    <MenuItem value={\"General\"}>General</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"admited_on\"\r\n                  name=\"admited_on\"\r\n                  label=\"Admitted Date\"\r\n                  type=\"date\"\r\n                  onChange={onChange}\r\n                  value={display}\r\n                  className={classes.textField}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                <TextField\r\n                  id=\"address\"\r\n                  name=\"address\"\r\n                  label=\"Address\"\r\n                  multiline\r\n                  rowsMax={2}\r\n                  value={state.address}\r\n                  onChange={onChange}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <FormControl variant=\"outlined\" size=\"small\" fullWidth>\r\n                  <StateDropdown\r\n                    value={state.state}\r\n                    onChange={(val) => selectState(val)}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <FormControl fullWidth>\r\n                  <RegionDropdown\r\n                    State={state.state}\r\n                    value={state.city}\r\n                    onChange={(val) => selectRegion(val)}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleClose}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              disableElevation\r\n              type=\"submit\"\r\n            >\r\n              submit\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nAddPatient.propTypes = {\r\n  addPatient: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addPatient })(AddPatient);\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { addMedicinePatient } from '../redux/actions/patient';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  mtop: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction AddMedicine(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [id, setID] = useState(null);\r\n  const [quantity, setQuantity] = useState(1);\r\n  useEffect(() => {\r\n    \r\n    return () => {\r\n      setQuantity(1);\r\n      setOpen(false);\r\n      setID(null);\r\n    }\r\n  }, []);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChange = (event, newValue) => { if (newValue != null) { setID(newValue.id); } }\r\n  const onSubmit = (e) => { e.preventDefault(); props.addMedicinePatient(id, props.patient_id, quantity);  setID(null); setOpen(false);}\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n        disableElevation\r\n        fullWidth\r\n        className={classes.mtop}\r\n        disabled = {!props.patient_id}\r\n      >\r\n        Issue Medicine\r\n      </Button>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Issue Medicines</DialogTitle>\r\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n          <DialogContent>\r\n            <DialogContentText>Issue Medicine Here</DialogContentText>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <Autocomplete\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  id=\"combo-box-demo\"\r\n                  options={props.master_med}\r\n                  onChange={onChange}\r\n                  getOptionLabel={(option) => option.name}\r\n                  getOptionSelected={option => option.id}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Medicine Name\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"quantity\"\r\n                  label=\"Quantity\"\r\n                  name=\"quantity\"\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                  value={quantity}\r\n                  onChange={(e)=>{setQuantity(e.target.value)}}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              disableElevation\r\n              type=\"submit\"\r\n            >\r\n              submit\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nAddMedicine.propTypes = {\r\n  master_med: PropTypes.array.isRequired,\r\n  addMedicinePatient: PropTypes.func.isRequired,\r\n  patient_id: PropTypes.number.isRequired,\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  master_med: state.masterMedicine.master,\r\n  patient_id: state.patient.id,\r\n})\r\n\r\nexport default connect(mapStateToProps, { addMedicinePatient })(AddMedicine);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addMedicineMaster } from '../redux/actions/masterMedicine';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  mtop: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction AddNewMedicine(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [state, setState] = useState({\r\n    name: '',\r\n    quantity: 0,\r\n    rate: 0\r\n  })\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChange = (e) => { setState({ ...state, [e.target.name]: e.target.value }) };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.addMedicineMaster(state);\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    return () => {\r\n      setState({\r\n        name: '',\r\n        quantity: 0,\r\n        rate: 0\r\n      });\r\n      setOpen(false);\r\n    }\r\n  }, [])\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n        disableElevation\r\n        fullWidth\r\n        className={classes.mtop}\r\n      >\r\n        Add Stock\r\n      </Button>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add New Medicines</DialogTitle>\r\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n          <DialogContent>\r\n            <DialogContentText>Add Medicine Here</DialogContentText>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  size=\"small\"\r\n                  type=\"text\"\r\n                  value={state.name}\r\n                  onChange={onChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"quantity\"\r\n                  label=\"Quantity\"\r\n                  name=\"quantity\"\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                  value={state.quantity}\r\n                  onChange={onChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"rate\"\r\n                  label=\"Rate\"\r\n                  name=\"rate\"\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                  onChange={onChange}\r\n                  value={state.rate}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleClose}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              disableElevation\r\n              type=\"submit\"\r\n            >\r\n              submit\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nAddNewMedicine.propTypes = {\r\n  addMedicineMaster: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, { addMedicineMaster })(AddNewMedicine);\r\n","import { ADD_MEDICINE_MASTER, REMOVE_MEDICINE_MASTER, GET_MEDICINE_MASTER, GET_ERRORS, UPDATE_PATIENT_MEDICINE_LIST, GET_MESSAGES } from './types';\r\nimport axios from 'axios';\r\nimport { tokenConfig } from './auth';\r\n\r\n\r\nexport const getMedicineMaster = () => (dispatch, getState) => {\r\n\r\n    axios.get(`${process.env.REACT_APP_API_URL}/api/master-medicines/`, tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: GET_MEDICINE_MASTER,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            const error = {\r\n                msg: err.response.data,\r\n                status: err.response.status\r\n            };\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: error\r\n            });\r\n        })\r\n\r\n}\r\n\r\n\r\nexport const addMedicineMaster = (data) => (dispatch, getState) => {\r\n\r\n    const body = JSON.stringify(data);\r\n\r\n    if (data.quantity <= 0) {\r\n        const error = {\r\n            msg: \"Please enter a valid quantity\",\r\n            status: 10401\r\n        };\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error\r\n        });\r\n        return;\r\n    }\r\n    if (data.rate <= 0) {\r\n        const error = {\r\n            msg: \"Please enter a valid price\",\r\n            status: 10401\r\n        };\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error\r\n        });\r\n        return;\r\n    }\r\n\r\n    axios.post(`${process.env.REACT_APP_API_URL}/api/master-medicines/`, body, tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: ADD_MEDICINE_MASTER,\r\n                payload: res.data\r\n            });\r\n            dispatch({\r\n                type: GET_MESSAGES,\r\n                payload: \"ADDED\"\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            const error = {\r\n                msg: err.response.data,\r\n                status: err.response.status\r\n            };\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: error\r\n            });\r\n        })\r\n}\r\n\r\nexport const removeMedicineMaster = (id) => (dispatch, getState) => {\r\n\r\n    axios.delete(`${process.env.REACT_APP_API_URL}/api/master-medicines/${id}`, tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: REMOVE_MEDICINE_MASTER,\r\n                payload: id\r\n            });\r\n            dispatch({\r\n                type: UPDATE_PATIENT_MEDICINE_LIST,\r\n                payload: id\r\n            });\r\n            dispatch({\r\n                type: GET_MESSAGES,\r\n                payload: \"DELETED\"\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            const error = {\r\n                msg: err.response.data,\r\n                status: err.response.status\r\n            };\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: error\r\n            });\r\n        })\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addDiagnosticPatient } from '../redux/actions/patient';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  mtop: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\n\r\nfunction AddDiagnostics(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [id, setID] = useState(null);\r\n\r\n  useEffect(() => {\r\n    \r\n    return () => {\r\n      setOpen(false);\r\n      setID(null);\r\n    }\r\n  }, [])\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChange = (event, newValue) => { if (newValue != null) { setID(newValue.id); } }\r\n  const onSubmit = (e) => { e.preventDefault(); props.addDiagnosticPatient(id, props.patient_id); setID(null); setOpen(false);}\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n        disableElevation\r\n        fullWidth\r\n        className={classes.mtop}\r\n        disabled={!props.patient_id}\r\n      >\r\n        Add Diagnostics\r\n      </Button>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add Diagnostics</DialogTitle>\r\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n          <DialogContent>\r\n            <DialogContentText>Add Diagnosis Here</DialogContentText>\r\n            <Autocomplete\r\n              size=\"small\"\r\n              fullWidth\r\n              id=\"combo-box-demo\"\r\n              options={props.diagnostic_master}\r\n              onChange={onChange}\r\n              getOptionLabel={(option) => option.name}\r\n              getOptionSelected={option => option.id}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Diagnostics Name\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              disableElevation\r\n              type=\"submit\"\r\n            >\r\n              submit\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nAddDiagnostics.propTypes = {\r\n  patient_id: PropTypes.number.isRequired,\r\n  diagnostic_master: PropTypes.array.isRequired,\r\n  addDiagnosticPatient: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  patient_id: state.patient.id,\r\n  diagnostic_master: state.masterDiagnostic.master,\r\n})\r\n\r\nexport default connect(mapStateToProps, { addDiagnosticPatient })(AddDiagnostics);\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  viewAllButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  container: {\r\n    maxHeight: 350,\r\n  },\r\n}));\r\n\r\nfunction ViewAllPatients() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Button\r\n        color=\"inherit\"\r\n        className={classes.viewAllButton}\r\n        onClick={handleClickOpen}\r\n      >\r\n        View All Patients\r\n      </Button>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"md\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">All Patient</DialogTitle>\r\n        <form className={classes.form} noValidate>\r\n          <DialogContent>\r\n            <Paper className={classes.newPaper} variant=\"outlined\">\r\n              <TableContainer variant=\"outlined\" className={classes.container}>\r\n                <Table aria-label=\"simple table\" size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Patient ID</TableCell>\r\n                      <TableCell align=\"right\">Name</TableCell>\r\n                      <TableCell align=\"right\">Age</TableCell>\r\n                      <TableCell align=\"right\">Address</TableCell>\r\n                      <TableCell align=\"right\">Admitted Date</TableCell>\r\n                      <TableCell align=\"right\">Type Of Room</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        123456789\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">Joseph</TableCell>\r\n                      <TableCell align=\"right\">56</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        Rick Street, Ameerpet, Hyderabad\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">03-may-2020</TableCell>\r\n                      <TableCell align=\"right\">Single</TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Paper>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewAllPatients;\r\n","import React, { useState } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport {\r\n  StateDropdown,\r\n  RegionDropdown,\r\n} from \"react-india-state-region-selector\";\r\nimport { connect } from 'react-redux';\r\nimport { updatePatient } from '../redux/actions/patient';\r\nimport PropTypes from 'prop-types';\r\nimport dayjs from 'dayjs';\r\nvar utc = require('dayjs/plugin/utc');\r\ndayjs.extend(utc);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction UpdatePatient(props) {\r\n  const patient = props.patient;\r\n  const [display, setDisplay] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const selectState = (val) => {\r\n    setState({...state, state: val});\r\n  };\r\n\r\n  const selectRegion = (val) => {\r\n    setState({...state, city: val});\r\n  };\r\n\r\n  const [state, setState] = useState({\r\n    name: patient.name,\r\n    age: patient.age,\r\n    admited_on: patient.admited_on,\r\n    type_of_bed: patient.type_of_bed,\r\n    address: patient.address,\r\n    city: patient.city,\r\n    state: patient.state\r\n  });\r\n\r\n  const onChange = (e) => { \r\n    if(e.target.name === \"admited_on\")\r\n    {\r\n      setDisplay(e.target.value);\r\n      let d = dayjs(e.target.value)\r\n      setState({ ...state, [e.target.name]: d.utc().format() });\r\n      return;\r\n    }\r\n    setState({ ...state, [e.target.name]: e.target.value }) \r\n  }\r\n  const onSubmit = (e) => { e.preventDefault(); props.updatePatient(state, patient.id);}\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <IconButton onClick={handleClickOpen}>\r\n        <EditIcon />\r\n      </IconButton>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Patient Registration</DialogTitle>\r\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n          <DialogContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"name\"\r\n                  label=\"Patient Name\"\r\n                  name=\"name\"\r\n                  size=\"small\"\r\n                  onChange={onChange}\r\n                  value={state.name}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <FormControl variant=\"outlined\" size=\"small\" fullWidth>\r\n                  <TextField\r\n                    label=\"Age\"\r\n                    required\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    id=\"age\"\r\n                    name=\"age\"\r\n                    type=\"number\"\r\n                    onChange={onChange}\r\n                    value={state.age}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <FormControl variant=\"outlined\" size=\"small\" fullWidth>\r\n                  <InputLabel id=\"type-of-room-label\">Type Of Room</InputLabel>\r\n                  <Select\r\n                    labelId=\"type-of-room-label\"\r\n                    id=\"type_of_bed\"\r\n                    name=\"type_of_bed\"\r\n                    value={state.type_of_bed}\r\n                    onChange={onChange}\r\n                    label=\"Type Of Room\"\r\n                    required\r\n                  >\r\n                    <MenuItem value={'Single'}>Single</MenuItem>\r\n                    <MenuItem value={'Shared'}>Shared</MenuItem>\r\n                    <MenuItem value={'General'}>General</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"admited_on\"\r\n                  name=\"admited_on\"\r\n                  label=\"Admitted Date\"\r\n                  type=\"date\"\r\n                  onChange={onChange}\r\n                  value={display}\r\n                  className={classes.textField}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                <TextField\r\n                  id=\"address\"\r\n                  name=\"address\"\r\n                  label=\"Address\"\r\n                  multiline\r\n                  rowsMax={2}\r\n                  value={state.address}\r\n                  onChange={onChange}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <FormControl variant=\"outlined\" size=\"small\" fullWidth>\r\n                  <StateDropdown\r\n                    value={state.state}\r\n                    onChange={(val) => selectState(val)}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <FormControl fullWidth>\r\n                  <RegionDropdown\r\n                    State={state.state}\r\n                    value={state.city}\r\n                    onChange={(val) => selectRegion(val)}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleClose}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              disableElevation\r\n              type=\"submit\"\r\n            >\r\n              submit\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nUpdatePatient.propTypes ={\r\n  updatePatient: PropTypes.func.isRequired,\r\n  patient: PropTypes.object.isRequired,\r\n} \r\n\r\nexport default connect(null, {updatePatient})(UpdatePatient);\r\n","import React from \"react\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {connect} from 'react-redux';\r\nimport {updatePatient} from '../redux/actions/patient';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  newPaper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(3.8),\r\n  },\r\n  container: {\r\n    maxHeight: 350,\r\n  },\r\n}));\r\n\r\nfunction BillPatient(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const patient = props.patient;\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const m_bill = (patient.medicines).reduce((acc, value) => { return acc + Number(value.quantity * value.medicines.rate) }, 0)\r\n  const d_bill = (patient.diagnostics).reduce((acc, value) => { return acc + Number(value.diagnostics.rate) }, 0)\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const date = (utc_format) => {\r\n    return new Date(utc_format).toDateString();\r\n  };\r\n\r\n  const cur_date = () => {\r\n    const dayjs = require('dayjs');\r\n    let now = dayjs();\r\n    return now.format(\"ddd MMMM D YYYY\");\r\n  };\r\n\r\n  const discharged = () => {\r\n    props.updatePatient({discharged: true}, patient.id, true);\r\n    setOpen(false);\r\n  }\r\n  const difference = (d1, d2) => {\r\n    const dayjs = require('dayjs');\r\n\r\n    const date1 = dayjs(d1);\r\n    const date2 = dayjs(d2);\r\n    const ans = date2.diff(date1, \"day\");\r\n    if (ans === 0) { return 1; }\r\n    return ans;\r\n  }\r\n\r\n  const roomPrice = (days, type) => {\r\n    if (type === \"General\") {\r\n      return (2000 * days);\r\n    }\r\n    else if (type === \"Shared\") {\r\n      return (4000 * days);\r\n    }\r\n    else {\r\n      return (8000 * days);\r\n    }\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <IconButton onClick={handleClickOpen}>\r\n        <ReceiptIcon />\r\n      </IconButton>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"lg\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Patient Billing</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\"></DialogContentText>\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle1\" className={classes.mtop}>\r\n                Patient Details\r\n                </Typography>\r\n              <Paper className={classes.newPaper} variant=\"outlined\">\r\n                <TableContainer className={classes.container}>\r\n                  <Table aria-label=\"simple table\" size=\"small\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Patient Id</TableCell>\r\n                        <TableCell align=\"right\">Name</TableCell>\r\n                        <TableCell align=\"right\">Age</TableCell>\r\n                        <TableCell align=\"right\">Address</TableCell>\r\n                        <TableCell align=\"right\">Admitted Date</TableCell>\r\n                        <TableCell align=\"right\">Date Of Discharge</TableCell>\r\n                        <TableCell align=\"right\">Type Of Room</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {patient.id}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{patient.name}</TableCell>\r\n                        <TableCell align=\"right\">{patient.age}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {patient.address}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{date(patient.admited_on)}</TableCell>\r\n                        <TableCell align=\"right\">{cur_date()}</TableCell>\r\n                        <TableCell align=\"right\">{patient.type_of_bed}</TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <Typography variant=\"subtitle1\" className={classes.mtop}>\r\n                Pharmacy Charges\r\n                </Typography>\r\n              <Paper className={classes.newPaper} variant=\"outlined\">\r\n                <TableContainer className={classes.container}>\r\n                  <Table aria-label=\"simple table\" size=\"small\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Medicine</TableCell>\r\n                        <TableCell align=\"right\">Quantity</TableCell>\r\n                        <TableCell align=\"right\">Rate</TableCell>\r\n                        <TableCell align=\"right\">Amount</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {patient.medicines.map((item) => (\r\n                        <TableRow key={item.id}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {item.medicines.name}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{item.quantity}</TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {item.medicines.rate}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            Rs. {item.quantity * item.medicines.rate}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Typography variant=\"subtitle1\" className={classes.mtop}>\r\n                Diagnostics Charges\r\n                </Typography>\r\n              <Paper className={classes.newPaper} variant=\"outlined\">\r\n                <TableContainer className={classes.container}>\r\n                  <Table aria-label=\"simple table\" size=\"small\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Name Of The Test</TableCell>\r\n                        <TableCell align=\"right\">Amount</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {patient.diagnostics.map((item) => (\r\n                        <TableRow key={item.id}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {item.diagnostics.name}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            Rs. {item.diagnostics.rate}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Typography variant=\"subtitle1\" className={classes.mtop}>\r\n                Sub Total\r\n                </Typography>\r\n              <Paper className={classes.newPaper} variant=\"outlined\">\r\n                <TableContainer className={classes.container}>\r\n                  <Table aria-label=\"simple table\" size=\"small\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Service</TableCell>\r\n                        <TableCell align=\"right\">Amount</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          Room({difference(date(patient.admited_on), cur_date())})\r\n                          </TableCell>\r\n                        <TableCell align=\"right\">Rs. {roomPrice(Number(difference(date(patient.admited_on), cur_date())), patient.type_of_bed)}</TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          Pharmacy\r\n                          </TableCell>\r\n                        <TableCell align=\"right\">Rs. {m_bill}</TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          Diagnostics\r\n                          </TableCell>\r\n                        <TableCell align=\"right\">Rs. {d_bill}</TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <Paper className={classes.paper} variant=\"outlined\">\r\n                <Typography variant=\"h4\" align=\"right\">\r\n                  Grand Total: Rs. {m_bill + d_bill + roomPrice(Number(difference(date(patient.admited_on), cur_date())), patient.type_of_bed)}\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            cancel\r\n          </Button>\r\n          <Button\r\n            onClick={discharged}\r\n            color=\"primary\"\r\n            autoFocus\r\n            variant=\"contained\"\r\n            disableElevation\r\n          >\r\n            Confirm\r\n          </Button>\r\n          <Button onClick={() => window.print()} color=\"primary\" variant=\"outlined\">\r\n            Print Bill\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nBillPatient.propTypes = {\r\n  updatePatient: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default connect(null, {updatePatient})(BillPatient);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addDiagnosticMaster } from \"../redux/actions/masterDiagnostic\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  mtop: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction AddNewMedicine(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [state, setState] = useState({\r\n    name: \"\",\r\n    rate: 0,\r\n  });\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.addDiagnosticMaster(state);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setState({\r\n        name: \"\",\r\n        rate: 0,\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n        disableElevation\r\n        fullWidth\r\n        className={classes.mtop}\r\n      >\r\n        Add New test\r\n      </Button>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add New Test</DialogTitle>\r\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n          <DialogContent>\r\n            <DialogContentText>Add Test Here</DialogContentText>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"name\"\r\n                  label=\"Name Of Diagnostic Test\"\r\n                  name=\"name\"\r\n                  size=\"small\"\r\n                  type=\"text\"\r\n                  value={state.name}\r\n                  onChange={onChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"rate\"\r\n                  label=\"Rate\"\r\n                  name=\"rate\"\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                  onChange={onChange}\r\n                  value={state.rate}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleClose}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              disableElevation\r\n              type=\"submit\"\r\n            >\r\n              submit\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nAddNewMedicine.propTypes = {\r\n  addDiagnosticMaster: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default connect(mapStateToProps, { addDiagnosticMaster })(AddNewMedicine);\r\n","import { ADD_DIAGNOSTIC_MASTER, REMOVE_DIAGNOSTIC_MASTER, GET_DIAGNOSTIC_MASTER, GET_ERRORS, UPDATE_PATIENT_DIAGNOSTIC_LIST, GET_MESSAGES } from './types';\r\nimport axios from 'axios';\r\nimport { tokenConfig } from './auth';\r\n\r\n\r\nexport const getDiagnosticMaster = () => (dispatch, getState) => {\r\n    \r\n    axios.get(`${process.env.REACT_APP_API_URL}/api/master-diagnostics/`, tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: GET_DIAGNOSTIC_MASTER,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            const error = {\r\n                msg: err.response.data,\r\n                status: err.response.status\r\n            };\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: error\r\n            });\r\n        })\r\n\r\n}\r\n\r\n\r\nexport const addDiagnosticMaster = ({name, rate}) => (dispatch, getState) => {\r\n\r\n\r\n    if(rate <= 0){\r\n\r\n        const error = {\r\n            msg: \"Please enter a valid rate\",\r\n            status: 10401\r\n        };\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error\r\n        });\r\n        return;\r\n\r\n    }\r\n\r\n    const body = JSON.stringify({ name, rate });\r\n\r\n    axios.post(`${process.env.REACT_APP_API_URL}/api/master-diagnostics/`, body, tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: ADD_DIAGNOSTIC_MASTER,\r\n                payload: res.data\r\n            });\r\n            dispatch({\r\n                type: GET_MESSAGES,\r\n                payload: \"ADDED\"\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            const error = {\r\n                msg: err.response.data,\r\n                status: err.response.status\r\n            };\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: error\r\n            });\r\n        })\r\n}\r\n\r\nexport const removeDiagnosticMaster = (id) => (dispatch, getState) => {\r\n\r\n    axios.delete(`${process.env.REACT_APP_API_URL}/api/master-diagnostics/${id}`, tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: REMOVE_DIAGNOSTIC_MASTER,\r\n                payload: id\r\n            });\r\n            dispatch({\r\n                type: UPDATE_PATIENT_DIAGNOSTIC_LIST,\r\n                payload: id\r\n            });\r\n            dispatch({\r\n                type: GET_MESSAGES,\r\n                payload: \"DELETED\"\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            const error = {\r\n                msg: err.response.data,\r\n                status: err.response.status\r\n            };\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: error\r\n            });\r\n        })\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  getPatient,\r\n  removeMedicinePatient,\r\n  removeDiagnosticPatient,\r\n  getAllPatients,\r\n  deletePatient,\r\n} from \"../redux/actions/patient\";\r\nimport {\r\n  getMedicineMaster,\r\n  removeMedicineMaster,\r\n} from \"../redux/actions/masterMedicine\";\r\nimport {\r\n  getDiagnosticMaster,\r\n  removeDiagnosticMaster,\r\n} from \"../redux/actions/masterDiagnostic\";\r\n\r\n//MUI\r\nimport {\r\n  makeStyles,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\n//Components\r\nimport { AddPatient } from \"../components\";\r\nimport { AddMedicine } from \"../components\";\r\nimport { AddNewMedicine } from \"../components\";\r\nimport { AddDiagnostics } from \"../components\";\r\nimport { UpdatePatient } from \"../components\";\r\nimport { BillPatient } from \"../components\";\r\nimport { AddNewTest } from \"../components\";\r\n\r\nimport dayjs from \"dayjs\";\r\n\r\nvar utc = require(\"dayjs/plugin/utc\");\r\ndayjs.extend(utc);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tandb: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    color: theme.palette.primary[600],\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  row: {\r\n    height: \"42px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n  },\r\n  spacer: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  gpaper: {\r\n    marginTop: theme.spacing(4),\r\n    display: \"flex\",\r\n    padding: theme.spacing(2),\r\n  },\r\n\r\n  mtop: {\r\n    marginTop: theme.spacing(4),\r\n    marginBottom: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  newPaper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  tablePaper: {\r\n    marginTop: theme.spacing(4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  search: {\r\n    borderRadius: \"4px\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexBasis: 420,\r\n  },\r\n  input: {\r\n    flexGrow: 1,\r\n    fontSize: \"14px\",\r\n    lineHeight: \"16px\",\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  table: {\r\n    minWidth: 300,\r\n  },\r\n  container: {\r\n    maxHeight: 250,\r\n  },\r\n  ncontainer: {\r\n    maxHeight: 280,\r\n  },\r\n  bspan: {\r\n    padding: \"10px\",\r\n    backgroundColor: \"#cfc\",\r\n  },\r\n}));\r\n\r\nconst Dashboard = (props) => {\r\n  useEffect(() => {\r\n    if (props.role === \"Desk\") {\r\n      props.getAllPatients();\r\n    } else if (props.role === \"Pharmacist\") {\r\n      props.getMedicineMaster();\r\n    } else {\r\n      props.getDiagnosticMaster();\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const onConfirm = () => {\r\n    if (open[0] === \"m\") {\r\n      props.removeMedicinePatient(open.slice(1));\r\n      setOpen(false);\r\n    } else if (open[0] === \"d\") {\r\n      props.removeDiagnosticPatient(open.slice(1));\r\n      setOpen(false);\r\n    } else if (open[0] === \"p\") {\r\n      props.deletePatient(open.slice(1));\r\n      setOpen(false);\r\n    } else if (open[0] === \"h\") {\r\n      props.removeMedicineMaster(open.slice(1));\r\n      setOpen(false);\r\n    } else if (open[0] === \"t\") {\r\n      props.removeDiagnosticMaster(open.slice(1));\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  const date = (utc_format) => {\r\n    return new Date(utc_format).toDateString();\r\n  };\r\n\r\n  const handleSwitchChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n  const [state, setState] = useState({\r\n    checkedB: true,\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const onChange = (e) => setSearch(e.target.value);\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.getPatient(search);\r\n    setSubmitted(true);\r\n  };\r\n  let roleDashboard =\r\n    props.role === \"Desk\" ? (\r\n      <React.Fragment>\r\n        <div>\r\n          <Paper className={classes.newPaper} variant=\"outlined\">\r\n            <div className={classes.row}>\r\n              <form onSubmit={onSubmit}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  id=\"search\"\r\n                  label=\"Search\"\r\n                  variant=\"outlined\"\r\n                  value={search}\r\n                  onChange={onChange}\r\n                  fullWidth\r\n                  className={classes.input}\r\n                  required\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton aria-label=\"search\" type=\"submit\">\r\n                          <SearchIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </form>\r\n              <IconButton\r\n                onClick={() => {\r\n                  setSubmitted(false);\r\n                }}\r\n              >\r\n                <CachedIcon />\r\n              </IconButton>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={state.checkedB}\r\n                    onChange={handleSwitchChange}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Include Discharged Patients\"\r\n              />\r\n              <span className={classes.spacer} />\r\n              <AddPatient />\r\n            </div>\r\n            <hr className={classes.tandb} />\r\n            <Typography variant=\"h5\" align=\"center\" className={classes.tandb}>\r\n              Patient Details\r\n            </Typography>\r\n            <Paper className={classes.newPaper} variant=\"outlined\">\r\n              <TableContainer variant=\"outlined\" className={classes.ncontainer}>\r\n                <Table\r\n                  className={classes.table}\r\n                  aria-label=\"simple table\"\r\n                  size=\"small\"\r\n                >\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Patient ID</TableCell>\r\n                      <TableCell align=\"right\">Name</TableCell>\r\n                      <TableCell align=\"right\">Age</TableCell>\r\n                      <TableCell align=\"right\">Address</TableCell>\r\n                      <TableCell align=\"right\">Admitted Date</TableCell>\r\n                      <TableCell align=\"right\">Type Of Room</TableCell>\r\n                      <TableCell align=\"right\">Update</TableCell>\r\n                      <TableCell align=\"right\">Delete</TableCell>\r\n                      <TableCell align=\"right\">Billing</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {!submitted ? (\r\n                      props.allPatients.map((item) => {\r\n\r\n                        if(state.checkedB){\r\n                          return(\r\n                        <TableRow\r\n                          key={item.id}\r\n                          style={\r\n                            item.discharged\r\n                              ? { background: \"#fff44f\" }\r\n                              : item.fresh\r\n                              ? { background: \"#00FF7F\" }\r\n                              : {}\r\n                          }\r\n                        >\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {item.id}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{item.name}</TableCell>\r\n                          <TableCell align=\"right\">{item.age}</TableCell>\r\n                          <TableCell align=\"right\">{item.address}</TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {date(item.admited_on)}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {item.type_of_bed}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            <UpdatePatient patient={item} />\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            <IconButton\r\n                              onClick={() => {\r\n                                setOpen(\"p\" + item.id);\r\n                              }}\r\n                            >\r\n                              <DeleteForeverIcon />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            <BillPatient patient={item} />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      )}\r\n                    \r\n                    else{\r\n                      if(!item.discharged){\r\n                        return(\r\n                          <TableRow\r\n                            key={item.id}\r\n                            style={\r\n                              item.discharged\r\n                                ? { background: \"#fff44f\" }\r\n                                : item.fresh\r\n                                ? { background: \"#00FF7F\" }\r\n                                : {}\r\n                            }\r\n                          >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {item.id}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{item.name}</TableCell>\r\n                            <TableCell align=\"right\">{item.age}</TableCell>\r\n                            <TableCell align=\"right\">{item.address}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                              {date(item.admited_on)}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                              {item.type_of_bed}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                              <UpdatePatient patient={item} />\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                              <IconButton\r\n                                onClick={() => {\r\n                                  setOpen(\"p\" + item.id);\r\n                                }}\r\n                              >\r\n                                <DeleteForeverIcon />\r\n                              </IconButton>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                              <BillPatient patient={item} />\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )\r\n                      }\r\n                      else{\r\n                        return null;\r\n                      }\r\n                    }\r\n                    \r\n                    \r\n                    })\r\n                    ) : props.patient.id && ((state.checkedB && props.patient.discharged) || (!props.patient.discharged)) ? (\r\n                      <TableRow\r\n                        key={props.patient.id}\r\n                        style={\r\n                          props.patient.discharged\r\n                            ? { background: \"#fff44f\" }\r\n                            : props.patient.fresh\r\n                            ? { background: \"#00FF7F\" }\r\n                            : {}\r\n                        }\r\n                      >\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {props.patient.id}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {props.patient.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{props.patient.age}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {props.patient.address}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {date(props.patient.admited_on)}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {props.patient.type_of_bed}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <UpdatePatient patient={props.patient} />\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              setOpen(\"p\" + props.patient.id);\r\n                            }}\r\n                          >\r\n                            <DeleteForeverIcon />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <BillPatient patient={props.patient} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Paper>\r\n            <Paper variant=\"outlined\" className={classes.gpaper}>\r\n              <span\r\n                style={{\r\n                  backgroundColor: \"#00FF7F\",\r\n                  height: \"15px\",\r\n                  width: \"15px\",\r\n                  marginRight: \"1%\",\r\n                }}\r\n              />\r\n              New/Updated Entry\r\n              <span\r\n                style={{\r\n                  backgroundColor: \"#fff44f\",\r\n                  height: \"15px\",\r\n                  width: \"15px\",\r\n                  marginRight: \"1%\",\r\n                  marginLeft: \"1%\",\r\n                }}\r\n              />\r\n              Discharged Patient\r\n              <span\r\n                style={{\r\n                  backgroundColor: \"white\",\r\n                  border: \"1px solid grey\",\r\n                  height: \"15px\",\r\n                  width: \"15px\",\r\n                  marginRight: \"1%\",\r\n                  marginLeft: \"1%\",\r\n                }}\r\n              />\r\n              Exsisting Entry\r\n            </Paper>\r\n          </Paper>\r\n        </div>\r\n      </React.Fragment>\r\n    ) : props.role === \"Pharmacist\" ? (\r\n      <React.Fragment>\r\n        <Paper variant=\"outlined\" className={classes.newPaper}>\r\n          <Grid container spacing={2} className={classes.root}>\r\n            <Grid item md={4} sm={12} xs={12}>\r\n              <form onSubmit={onSubmit}>\r\n                <TextField\r\n                  id=\"search\"\r\n                  label=\"Search\"\r\n                  variant=\"outlined\"\r\n                  onChange={onChange}\r\n                  fullWidth\r\n                  className={classes.Input}\r\n                  required\r\n                  value={search}\r\n                  helperText=\"Enter only the Patient ID\"\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton aria-label=\"search\" type=\"submit\">\r\n                          <SearchIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </form>\r\n            </Grid>\r\n            <Grid item md={8} sm={12} xs={12}>\r\n              <Paper variant=\"outlined\" className={classes.newPaper}>\r\n                <TableContainer\r\n                  variant=\"outlined\"\r\n                  className={classes.container}\r\n                >\r\n                  <Table\r\n                    className={classes.table}\r\n                    aria-label=\"simple table\"\r\n                    size=\"small\"\r\n                  >\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Patient ID</TableCell>\r\n                        <TableCell align=\"right\">Name</TableCell>\r\n                        <TableCell align=\"right\">Age</TableCell>\r\n                        <TableCell align=\"right\">Address</TableCell>\r\n                        <TableCell align=\"right\">Admitted Date</TableCell>\r\n                        <TableCell align=\"right\">Type Of Room</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {!submitted ? (\r\n                        <></>\r\n                      ) : props.patient.id ? (\r\n                        <TableRow\r\n                          key={props.patient.id}\r\n                          style={\r\n                            props.patient.discharged\r\n                              ? { background: \"#fff44f\" }\r\n                              : props.patient.fresh\r\n                              ? { background: \"#00FF7F\" }\r\n                              : {}\r\n                          }\r\n                        >\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {props.patient.id}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {props.patient.name}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {props.patient.age}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {props.patient.address}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {date(props.patient.admited_on)}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {props.patient.type_of_bed}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item md={12} sm={12} xs={12}>\r\n              <hr className={classes.tandb} />\r\n            </Grid>\r\n            <Grid item md={6} sm={12} xs={12}>\r\n              <Typography variant=\"h6\" align=\"center\" className={classes.tandb}>\r\n                Patient's Medicine Chart\r\n              </Typography>\r\n              <Paper className={classes.newPaper} variant=\"outlined\">\r\n                <TableContainer className={classes.container}>\r\n                  <Table\r\n                    aria-label=\"simple table\"\r\n                    size=\"small\"\r\n                    className={classes.table}\r\n                  >\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Medicine</TableCell>\r\n                        <TableCell align=\"right\">Quantity</TableCell>\r\n                        <TableCell align=\"right\">Rate </TableCell>\r\n                        <TableCell align=\"right\">Amount</TableCell>\r\n                        <TableCell align=\"right\">Remove</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {props.patient.medicines.map((item) => (\r\n                        <TableRow\r\n                          key={item.id}\r\n                          style={item.fresh ? { background: \"#00FF7F\" } : {}}\r\n                        >\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {item.medicines.name}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{item.quantity}</TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {item.medicines.rate}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            Rs. {item.quantity * item.medicines.rate}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            <IconButton\r\n                              onClick={() => {\r\n                                setOpen(\"m\" + item.id);\r\n                              }}\r\n                            >\r\n                              <DeleteForeverIcon />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <AddMedicine className={classes.tandb} />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item md={6} sm={12} xs={12}>\r\n              <Typography variant=\"h6\" align=\"center\" className={classes.tandb}>\r\n                Pharmacy Stock\r\n              </Typography>\r\n              <Paper className={classes.newPaper} variant=\"outlined\">\r\n                <TableContainer\r\n                  variant=\"outlined\"\r\n                  className={classes.container}\r\n                >\r\n                  <Table\r\n                    aria-label=\"simple table\"\r\n                    size=\"small\"\r\n                    className={classes.table}\r\n                  >\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Medicine</TableCell>\r\n                        <TableCell align=\"right\">Quantity</TableCell>\r\n                        <TableCell align=\"right\">Rate </TableCell>\r\n                        <TableCell align=\"right\">Remove </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {props.master_med.map((item) => (\r\n                        <TableRow\r\n                          key={item.id}\r\n                          style={item.fresh ? { background: \"#00FF7F\" } : {}}\r\n                        >\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {item.name}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{item.quantity}</TableCell>\r\n                          <TableCell align=\"right\">{item.rate}</TableCell>\r\n                          <TableCell align=\"right\">\r\n                            <IconButton\r\n                              onClick={() => {\r\n                                setOpen(\"h\" + item.id);\r\n                              }}\r\n                            >\r\n                              <DeleteForeverIcon />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <AddNewMedicine className={classes.tandb} />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Paper variant=\"outlined\" className={classes.gpaper}>\r\n            <span\r\n              style={{\r\n                backgroundColor: \"#00FF7F\",\r\n                height: \"15px\",\r\n                width: \"15px\",\r\n                marginRight: \"1%\",\r\n              }}\r\n            />\r\n            New/Updated Entry\r\n            <span\r\n              style={{\r\n                backgroundColor: \"#fff44f\",\r\n                height: \"15px\",\r\n                width: \"15px\",\r\n                marginRight: \"1%\",\r\n                marginLeft: \"1%\",\r\n              }}\r\n            />\r\n            Discharged Patient\r\n            <span\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                border: \"1px solid grey\",\r\n                height: \"15px\",\r\n                width: \"15px\",\r\n                marginRight: \"1%\",\r\n                marginLeft: \"1%\",\r\n              }}\r\n            />\r\n            Exsisting Entry\r\n          </Paper>\r\n        </Paper>\r\n      </React.Fragment>\r\n    ) : (\r\n      <React.Fragment>\r\n        <Paper variant=\"outlined\" className={classes.newPaper}>\r\n          <Grid container spacing={2} className={classes.root}>\r\n            <Grid item md={4} sm={12} xs={12}>\r\n              <form onSubmit={onSubmit}>\r\n                <TextField\r\n                  id=\"search\"\r\n                  label=\"Search\"\r\n                  variant=\"outlined\"\r\n                  onChange={onChange}\r\n                  fullWidth\r\n                  value={search}\r\n                  className={classes.Input}\r\n                  required\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton aria-label=\"search\" type=\"submit\">\r\n                          <SearchIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </form>\r\n            </Grid>\r\n            <Grid item md={8} sm={12} xs={12}>\r\n              <Paper variant=\"outlined\" className={classes.newPaper}>\r\n                <TableContainer\r\n                  variant=\"outlined\"\r\n                  className={classes.container}\r\n                >\r\n                  <Table\r\n                    className={classes.table}\r\n                    aria-label=\"simple table\"\r\n                    size=\"small\"\r\n                  >\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Patient ID</TableCell>\r\n                        <TableCell align=\"right\">Name</TableCell>\r\n                        <TableCell align=\"right\">Age</TableCell>\r\n                        <TableCell align=\"right\">Address</TableCell>\r\n                        <TableCell align=\"right\">Admitted Date</TableCell>\r\n                        <TableCell align=\"right\">Type Of Room</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {!submitted ? (\r\n                        <></>\r\n                      ) : props.patient.id ? (\r\n                        <TableRow\r\n                          key={props.patient.id}\r\n                          style={\r\n                            props.patient.discharged\r\n                              ? { background: \"#fff44f\" }\r\n                              : props.patient.fresh\r\n                              ? { background: \"#00FF7F\" }\r\n                              : {}\r\n                          }\r\n                        >\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {props.patient.id}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {props.patient.name}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {props.patient.age}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {props.patient.address}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {date(props.patient.admited_on)}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {props.patient.type_of_bed}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item md={12} sm={12} xs={12}>\r\n              <hr className={classes.tandb} />\r\n            </Grid>\r\n            <Grid item md={6} sm={12} xs={12}>\r\n              <Typography variant=\"h6\" align=\"center\" className={classes.tandb}>\r\n                Patient's Diagnostics Chart\r\n              </Typography>\r\n              <Paper className={classes.newPaper} variant=\"outlined\">\r\n                <TableContainer className={classes.container}>\r\n                  <Table\r\n                    aria-label=\"simple table\"\r\n                    size=\"small\"\r\n                    className={classes.table}\r\n                  >\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Name Of The Test</TableCell>\r\n                        <TableCell align=\"right\">Amount</TableCell>\r\n                        <TableCell align=\"right\">Remove</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {props.patient.diagnostics.map((item) => (\r\n                        <TableRow\r\n                          key={item.id}\r\n                          style={item.fresh ? { background: \"#00FF7F\" } : {}}\r\n                        >\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {item.diagnostics.name}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            Rs. {item.diagnostics.rate}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            <IconButton\r\n                              onClick={() => {\r\n                                setOpen(\"d\" + item.id);\r\n                              }}\r\n                            >\r\n                              <DeleteForeverIcon />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <AddDiagnostics className={classes.tandb} />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item md={6} sm={12} xs={12}>\r\n              <Typography variant=\"h6\" align=\"center\" className={classes.tandb}>\r\n                Diagnostics Available\r\n              </Typography>\r\n              <Paper className={classes.newPaper} variant=\"outlined\">\r\n                <TableContainer\r\n                  variant=\"outlined\"\r\n                  className={classes.container}\r\n                >\r\n                  <Table\r\n                    aria-label=\"simple table\"\r\n                    size=\"small\"\r\n                    className={classes.table}\r\n                  >\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Name Of Test</TableCell>\r\n                        <TableCell align=\"right\">Amount</TableCell>\r\n                        <TableCell align=\"right\">Remove</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {props.diagnostic_master.map((item) => (\r\n                        <TableRow\r\n                          key={item.id}\r\n                          style={item.fresh ? { background: \"#00FF7F\" } : {}}\r\n                        >\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {item.name}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">Rs. {item.rate}</TableCell>\r\n                          <TableCell align=\"right\">\r\n                            <IconButton\r\n                              onClick={() => {\r\n                                setOpen(\"t\" + item.id);\r\n                              }}\r\n                            >\r\n                              <DeleteForeverIcon />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <AddNewTest className={classes.tandb} />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Paper variant=\"outlined\" className={classes.gpaper}>\r\n            <span\r\n              style={{\r\n                backgroundColor: \"#00FF7F\",\r\n                height: \"15px\",\r\n                width: \"15px\",\r\n                marginRight: \"1%\",\r\n              }}\r\n            />\r\n            New/Updated Entry\r\n            <span\r\n              style={{\r\n                backgroundColor: \"#fff44f\",\r\n                height: \"15px\",\r\n                width: \"15px\",\r\n                marginRight: \"1%\",\r\n                marginLeft: \"1%\",\r\n              }}\r\n            />\r\n            Discharged Patient\r\n            <span\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                border: \"1px solid grey\",\r\n                height: \"15px\",\r\n                width: \"15px\",\r\n                marginRight: \"1%\",\r\n                marginLeft: \"1%\",\r\n              }}\r\n            />\r\n            Exsisting Entry\r\n          </Paper>\r\n        </Paper>\r\n      </React.Fragment>\r\n    );\r\n  return (\r\n    <div>\r\n      <Container maxWidth=\"lg\">\r\n        <Box>\r\n          <Dialog\r\n            maxWidth=\"sm\"\r\n            open={open ? true : false}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">ARE YOU SURE?</DialogTitle>\r\n            <DialogActions>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  setOpen(false);\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disableElevation\r\n                type=\"submit\"\r\n                onClick={onConfirm}\r\n              >\r\n                YES\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Box>\r\n        <Box>{roleDashboard}</Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  role: PropTypes.string.isRequired,\r\n  getPatient: PropTypes.func.isRequired,\r\n  patient: PropTypes.object.isRequired,\r\n  getMedicineMaster: PropTypes.func.isRequired,\r\n  master_med: PropTypes.array.isRequired,\r\n  removeMedicinePatient: PropTypes.func.isRequired,\r\n  removeDiagnosticPatient: PropTypes.func.isRequired,\r\n  getDiagnosticMaster: PropTypes.func.isRequired,\r\n  diagnostic_master: PropTypes.array.isRequired,\r\n  getAllPatients: PropTypes.func.isRequired,\r\n  allPatients: PropTypes.array.isRequired,\r\n  deletePatient: PropTypes.func.isRequired,\r\n  removeMedicineMaster: PropTypes.func.isRequired,\r\n  removeDiagnosticMaster: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  role: state.auth.user.role,\r\n  patient: state.patient,\r\n  master_med: state.masterMedicine.master,\r\n  diagnostic_master: state.masterDiagnostic.master,\r\n  allPatients: state.allPatients.result,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getPatient,\r\n  getMedicineMaster,\r\n  removeMedicinePatient,\r\n  removeDiagnosticPatient,\r\n  getDiagnosticMaster,\r\n  getAllPatients,\r\n  deletePatient,\r\n  removeMedicineMaster,\r\n  removeDiagnosticMaster,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { register } from \"../redux/actions/auth\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst SignUp = (props) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    name: null,\r\n    username: null,\r\n    password: null,\r\n    role: 'Desk',\r\n  });\r\n  const onChange = (e) =>\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.register(state.name, state.username, state.password, state.role);\r\n  };\r\n\r\n  if (props.auth.isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"sm\">\r\n      <CssBaseline />\r\n      <Paper elevation={0} className={classes.paper} variant=\"outlined\">\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                helperText=\"Atleast 8 characters required \"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"lname\"\r\n                onChange={onChange}\r\n                value={state.username}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                autoFocus\r\n                onChange={onChange}\r\n                value={state.name}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                helperText=\"Atleast 10 characters required with atleast one number, one uppercase, one lowercase and one special character\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={onChange}\r\n                value={state.password}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl variant=\"outlined\" required fullWidth>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Role\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"role\"\r\n                  name=\"role\"\r\n                  label=\"Role\"\r\n                  onChange={onChange}\r\n                  value={state.role}\r\n                >\r\n                  <MenuItem value={\"Desk\"}>Desk</MenuItem>\r\n                  <MenuItem value={\"Pharmacist\"}>Pharmacist</MenuItem>\r\n                  <MenuItem value={\"Diagnostics\"}>Diagnostics</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disableElevation\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nSignUp.propTypes = {\r\n  register: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { register })(SignUp);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest}) => {\r\n    return(\r\n    <Route \r\n    {...rest}\r\n    render={(props) => \r\n    auth.isAuthenticated === false ? \r\n    (<Redirect to=\"/\"/>):\r\n    (<Component {...props}/>)\r\n    }/>\r\n)\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute)","import React from \"react\";\r\nimport Alerts from \"./components/Alerts\";\r\n\r\n//Router\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\n//Views\r\nimport {\r\n  Login as LoginView,\r\n  NotFound as NotFoundView,\r\n  Dashboard as DashboardView,\r\n  SignUp as SignUpView\r\n} from \"./views\";\r\n\r\n//Components\r\nimport { Navbar } from \"./components\";\r\n\r\n//Private route\r\nimport PrivateRoute from './components/PrivateRoute';\r\n\r\nfunction Routes() {\r\n  return (\r\n    <div className=\"content\">\r\n      <Router>\r\n        <Navbar />\r\n        <Alerts />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={LoginView} />\r\n          <Route exact path='/signup' component={SignUpView} />\r\n          <PrivateRoute exact path=\"/dashboard\" component={DashboardView} />\r\n          <Route component={NotFoundView} exact path=\"/not-found\" />\r\n          <Redirect to=\"/not-found\" />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import { USER_LOADING, USER_LOADED, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT_USER, REGISTRATION_FAIL, REGISTRATION_SUCCESS } from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: false,\r\n    isLoading: false,\r\n    user: {\r\n        id: 0,\r\n        username: \"\",\r\n        created_at: \"\",\r\n        name: \"\",\r\n        role: \"\"\r\n    }\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload\r\n            }\r\n\r\n        case AUTH_ERROR:\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n                user: null,\r\n            }\r\n\r\n        case LOGIN_FAIL:\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n                user: null,\r\n            }\r\n\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token)\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                isLoading: false\r\n            }\r\n\r\n        case LOGOUT_USER:\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n                user: null\r\n            }\r\n\r\n        case REGISTRATION_FAIL:\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n                user: null\r\n            }\r\n\r\n        case REGISTRATION_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token)\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                isLoading: false\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","  \r\nimport { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState ={\r\n    msg: {},\r\n    status: null\r\n}\r\n\r\nexport default function (state = initialState, action){\r\n    switch(action.type)\r\n    {\r\n        case GET_ERRORS:\r\n            return{\r\n                msg: action.payload.msg,\r\n                status: action.payload.status\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_MESSAGES } from '../actions/types';\r\n\r\nconst initialState ={\r\n    msg: \"Thank You!\"\r\n}\r\n\r\nexport default function (state = initialState, action){\r\n    switch(action.type)\r\n    {\r\n        case GET_MESSAGES:\r\n            return{\r\n                msg: action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_PATIENT, ADD_DIAGNOSTIC_PATIENT, ADD_MEDICINE_PATIENT, REMOVE_DIAGNOSTIC_PATIENT, REMOVE_MEDICINE_PATIENT, CLEAR_PATIENT, UPDATE_PATIENT_MEDICINE_LIST, UPDATE_PATIENT_DIAGNOSTIC_LIST } from '../actions/types';\r\n\r\nconst initialState = {\r\n    address: \"\",\r\n    admited_on: \"\",\r\n    age: 0,\r\n    city: \"\",\r\n    diagnostics: [],\r\n    id: 0,\r\n    medicines: [],\r\n    name: '',\r\n    state: '',\r\n    type_of_bed: ''\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case GET_PATIENT:\r\n            return { ...payload }\r\n\r\n        case ADD_DIAGNOSTIC_PATIENT:\r\n            return { ...state, diagnostics: [{...payload, fresh: true}, ...state.diagnostics] }\r\n\r\n        case ADD_MEDICINE_PATIENT:\r\n            return { ...state, medicines: [{...payload, fresh: true}, ...state.medicines] }\r\n\r\n        case REMOVE_DIAGNOSTIC_PATIENT:\r\n            return { ...state, diagnostics: (state.diagnostics).filter((item) => item.id !== Number(payload)) }\r\n\r\n        case REMOVE_MEDICINE_PATIENT:\r\n            return { ...state, medicines: (state.medicines).filter((item) => item.id !== Number(payload))}\r\n\r\n        case UPDATE_PATIENT_MEDICINE_LIST:\r\n            return { ...state, medicines: (state.medicines).filter((item)=> item.medicine !== Number(payload))}\r\n\r\n        case UPDATE_PATIENT_DIAGNOSTIC_LIST:\r\n            return { ...state, diagnostics: (state.diagnostics).filter((item)=> item.diagnostic !== Number(payload))}\r\n\r\n        case CLEAR_PATIENT:\r\n            return {initialState}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { GET_ALL_PATIENTS, DELETE_PATIENT, ADD_PATIENT, UPDATE_PATIENT } from '../actions/types';\r\n\r\nconst initialState = {\r\n    result: []\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case GET_ALL_PATIENTS:\r\n            return { ...state, result: payload }\r\n\r\n        case DELETE_PATIENT:\r\n            return { ...state, result: (state.result).filter((item) => item.id !== Number(payload)) }\r\n\r\n        case ADD_PATIENT:\r\n            return { ...state, result: [{...payload, fresh: true}, ...state.result]}\r\n\r\n        case UPDATE_PATIENT:\r\n            return { ...state, result: (state.result).map((item)=>{if(item.id === payload.id){return({...payload, fresh: true});}else{return(item);}})}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { GET_DIAGNOSTIC_MASTER, ADD_DIAGNOSTIC_MASTER, REMOVE_DIAGNOSTIC_MASTER } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    master: []\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case GET_DIAGNOSTIC_MASTER:\r\n            return { ...state, master: payload }\r\n\r\n        case ADD_DIAGNOSTIC_MASTER:\r\n            return {...state, master: [{...payload, fresh: true}, ...state.master]}\r\n\r\n        case REMOVE_DIAGNOSTIC_MASTER:\r\n            return {...state, master: (state.master).filter((item)=> item.id !== Number(payload))}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { GET_MEDICINE_MASTER, ADD_MEDICINE_MASTER, REMOVE_MEDICINE_MASTER, UPDATE_MEDICINE } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    master: []\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case GET_MEDICINE_MASTER:\r\n            return { ...state, master: payload }\r\n\r\n        case ADD_MEDICINE_MASTER:\r\n            return { ...state, master: [{...payload, fresh: true}, ...state.master] }\r\n\r\n        case REMOVE_MEDICINE_MASTER:\r\n            return { ...state, master: (state.master).filter((item) => item.id !== Number(payload)) }\r\n\r\n        case UPDATE_MEDICINE:\r\n            return { ...state, master: (state.master).map((item) => { if (item.id === payload.medicine) { return ({ ...item, quantity: (item.quantity - payload.quantity) }) } else { return (item); } }) }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\nimport errors from './errors';\r\nimport messages from './messages';\r\nimport patient from './patient';\r\nimport allPatients from './allPatients';\r\nimport masterDiagnostic from './masterDiagnostic';\r\nimport masterMedicine from './masterMedicine';\r\nimport { CLEAR } from '../actions/types';\r\n\r\nconst appReducer = combineReducers({\r\n    auth,\r\n    errors,\r\n    messages,\r\n    patient,\r\n    allPatients,\r\n    masterDiagnostic,\r\n    masterMedicine,\r\n  })\r\n  \r\nconst initialState = appReducer({}, {})\r\n  \r\nconst rootReducer = (state, action) => {\r\n    if (action.type === CLEAR) {\r\n      state = initialState\r\n    }\r\n  \r\n    return appReducer(state, action)\r\n  }\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst alertStyle = (type) => {\r\n    let bg ='';\r\n    if(type === \"success\")\r\n    {\r\n         bg = '#2fde5e';\r\n    }\r\n    else if(type === \"info\")\r\n    {\r\n         bg = '#ded52f';\r\n    }\r\n    else{\r\n        bg = '#f7254f';\r\n    }\r\n    return(\r\n        {\r\n    backgroundColor: bg,\r\n    color: 'white',\r\n    padding: '10px',\r\n    textTransform: 'uppercase',\r\n    borderRadius: '3px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    boxShadow: '0px 2px 2px 2px rgba(0, 0, 0, 0.03)',\r\n    fontFamily: 'Arial',\r\n    width: '300px',\r\n    boxSizing: 'border-box'\r\n        }\r\n    )\r\n  }\r\n  \r\n  const buttonStyle = {\r\n    marginLeft: '10px',\r\n    border: 'none',\r\n    backgroundColor: 'transparent',\r\n    cursor: 'pointer',\r\n    color: '#FFFFFF'\r\n  }\r\n\r\n\r\nconst AlertTemplate = ({ message, options, style, close }) => {\r\n    return (\r\n        <div style={{ ...alertStyle(options.type), ...style }}>\r\n        {options.type === 'info' && <InfoIcon />}\r\n        {options.type === 'success' && <CheckCircleIcon />}\r\n        {options.type === 'error' && <WarningIcon />}\r\n        <span style={{ flex: 2, paddingLeft: 10 }}>{message}</span>\r\n        <button onClick={close} style={buttonStyle}>\r\n          <CloseIcon />\r\n        </button>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default AlertTemplate;","import { colors } from \"@material-ui/core\";\r\n\r\nconst white = \"#FFFFFF\";\r\nconst black = \"#000000\";\r\n\r\nexport default {\r\n  black,\r\n  white,\r\n  primary: {\r\n    contrastText: white,\r\n    dark: colors.lightBlue[900],\r\n    main: colors.lightBlue[500],\r\n    light: colors.lightBlue[100],\r\n  },\r\n  secondary: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue[\"A400\"],\r\n    light: colors.blue[\"A400\"],\r\n  },\r\n  success: {\r\n    contrastText: white,\r\n    dark: colors.green[900],\r\n    main: colors.green[600],\r\n    light: colors.green[400],\r\n  },\r\n  info: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue[600],\r\n    light: colors.blue[400],\r\n  },\r\n  warning: {\r\n    contrastText: white,\r\n    dark: colors.orange[900],\r\n    main: colors.orange[600],\r\n    light: colors.orange[400],\r\n  },\r\n  error: {\r\n    contrastText: white,\r\n    dark: colors.red[900],\r\n    main: colors.red[600],\r\n    light: colors.red[400],\r\n  },\r\n  text: {\r\n    primary: colors.blueGrey[900],\r\n    secondary: colors.blueGrey[600],\r\n    link: colors.blue[600],\r\n  },\r\n  background: {\r\n    default: \"#F4F6F8\",\r\n    paper: white,\r\n  },\r\n  icon: colors.blueGrey[600],\r\n  divider: colors.grey[200],\r\n};\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nimport palette from \"./palette\";\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n});\r\n\r\nexport default theme;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Routes from \"./Routes\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { loadUser } from \"./redux/actions/auth\";\r\nimport AlertTemplate from \"./components/AlertTemplate\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport theme from \"./theme\";\r\nimport { Provider as AlertProvider } from \"react-alert\";\r\n\r\nconst alertOptions = {\r\n  timeout: 5000,\r\n  position: \"bottom center\",\r\n};\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n  }, []);\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Provider store={store}>\r\n        <AlertProvider theme={theme} template={AlertTemplate} {...alertOptions}>\r\n          <Routes />\r\n        </AlertProvider>\r\n      </Provider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}